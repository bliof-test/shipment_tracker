git_volume: &git_volume
  hostPath: /nfs/shipment_tracker
  containerPath: /git
  mode: RW

az_constraint: &az_constraint # Same availability zone as NFS server
  - az
  - LIKE
  - ^a$

vars:
  production:
    new_relic_app_id: 7057912
    git_worker_memory: 4096
    delayed_job_instances: 3
    delayed_job_memory: 1024
    prometheus_exporter_memory: 512
    web_instances: 3
    web_memory: 1024
  staging:
    new_relic_app_id: 262878917
  uat:
    new_relic_app_id: 216487708
  default:
    git_worker_memory: 1024
    delayed_job_instances: 2
    delayed_job_memory: 512
    prometheus_exporter_memory: 128
    web_instances: 2
    web_memory: 512

vault:
  path: shipment_tracker/secrets

deploy_tasks:
  shipment_tracker:
    enabled: true
    deploy_token: KxT3S6cFjtQ5aVsB3GSVrzQW
  marathon:
    apps:
      - id: delayed-job
        instances: {{ delayed_job_instances }}
        cpus: 0.25
        mem: {{ delayed_job_memory }}
        args: ["bundle", "exec", "rake", "jobs:work"]
        constraints:
          - *az_constraint
        container:
          volumes:
            - *git_volume

      - id: event-worker
        instances: 1
        cpus: 0.25
        mem: 512
        args: ["bundle", "exec", "rake", "jobs:update_events_loop"]
        taskKillGracePeriodSeconds: 30
        constraints:
          - *az_constraint
        container:
          volumes:
            - *git_volume

      - id: git-worker
        instances: 1
        cpus: 0.25
        mem: {{ git_worker_memory }}
        args: ["bundle", "exec", "rake", "jobs:update_git_loop"]
        taskKillGracePeriodSeconds: 30
        constraints:
          - *az_constraint
        container:
          volumes:
            - *git_volume

      - id: prometheus-exporter
        instances: 1
        cpus: 0.25
        mem: {{ prometheus_exporter_memory }}
        args: ["bundle", "exec", "prometheus_exporter", "--bind", "0.0.0.0", "--verbose"]
        container:
          docker:
            portMappings:
              - name: http
                containerPort: 9394
                hostPort: 0
                labels:
                  metrics: "/metrics"
        healthChecks:
          - path: /send-metrics
            protocol: HTTP
            gracePeriodSeconds: 30
            intervalSeconds: 30
        labels:
          tags: http
        taskKillGracePeriodSeconds: 30

      - id: web
        instances: {{ web_instances }}
        cpus: 0.25
        mem: {{ web_memory }}
        args: ["bundle", "exec", "unicorn", "--config-file", "config/unicorn.rb"]
        constraints:
          - *az_constraint
          - - hostname
            - UNIQUE
        container:
          volumes:
            - *git_volume
          docker:
            portMappings:
              # Set PORT_HTTP to a random port number
              - name: http
                containerPort: 0
                hostPort: 0
        healthChecks:
          - path: /healthcheck
            protocol: HTTP
            gracePeriodSeconds: 30
            intervalSeconds: 30
        labels:
          tags: http,public-http
          overrideTaskName: shipment-tracker

  postgres:
    migrations_path: /app/docker/run_migrations.sh

  log_deployment:
    new_relic:
      app_id: {{ new_relic_app_id }}

  load_secrets:
    enabled: true
